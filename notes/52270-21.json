{"characterId":52270,"noteId":21,"linkItemType":null,"linkKey":"0x0000000000000000000000000000000000000000000000000000000000000000","deleted":false,"locked":false,"contractAddress":"0x0000000000000000000000000000000000000000","uri":"ipfs://bafkreids3r4wjs7baywwj6yqnabrimbzd5agydkvru2pvv7diw5frlmcyu","operator":"0x679658be03475d0a5393c70ea0e9a1158dfae1ff","owner":"0x679658be03475d0a5393c70ea0e9a1158dfae1ff","createdAt":"2023-04-05T06:36:12.000Z","updatedAt":"2023-04-05T06:36:12.000Z","deletedAt":null,"publishedAt":"2022-03-19T23:00:56.000Z","transactionHash":"0xb7216c8d5fe8021bfcdec160f48a3012b791b8beaff373f9040a0b29932022b2","blockNumber":30317477,"logIndex":1,"updatedTransactionHash":"0xb7216c8d5fe8021bfcdec160f48a3012b791b8beaff373f9040a0b29932022b2","updatedBlockNumber":30317477,"updatedLogIndex":1,"metadata":{"uri":"ipfs://bafkreids3r4wjs7baywwj6yqnabrimbzd5agydkvru2pvv7diw5frlmcyu","type":"NOTE","content":{"tags":["post","前端","笔试题"],"type":"note","title":"2022春京东前端笔试题目复盘","content":"---\ntitle: 2022春京东前端笔试题目复盘\nlink: jd-examination-2022-spring-frontend\ncatalog: true\nlang: cn\ndate: 2022-03-19 23:00:56 \nsubtitle: 选择题和两道编程题，跟360相似\ncover: img/header_img/galaxy-ngc-3190-wallpaper-for-2880x1800-60-653.jpg\ntags:\n- 前端\n- 笔试题\ncategories:\n- [笔试面经, 笔试复盘]\n---\n\n京东笔试题目复盘，前端开发的笔试题，包括选择题30道与两道编程（跟360还恰好在同一天，蚌，一天两场笔试）\n\n# 选择题（30道）\n啥都考，巴拉巴拉巴拉的，数据库啊高数啊方程啊，后半段前端题居多。\n# 编程题-1 小明的最大值（AC100%）\n小明有一台机器，每次输入一个数就会返回一个非负整数。经过小明的多次试验，知道了如果给这台机器一个数x，机器会返回这个数除以P的余数y，而P刻在这台机器的下方，小明可以查看到。\n\n例如当P=5时，输入x=9机器会返回4，输入15时会返回0。\n\n小明现在可以输入[L,R]这个闭区间内所有的整数，问小明能从这台机器中得到的最大的返回值是多少。\n\n输入描述\n有多组数据。第一行一个数T表示数据组数\n\n接下来三行，每一行有T个整数L[i],R[i],P[i]，L[i],R[i],P[i]表示第i组数据的区间左端点，右端点，和机器的参数P\n\n输出描述\n输出一行T个数按顺序分别表示每组数据的答案\n\n样例输入\n```\n2\n5 1\n6 2\n5 7\n```\n\n样例输出\n```\n1 2\n```\n\n提示\n第一组数据，输入5可以得到0，输入6可以得到1，因此答案为1\n\n第二组数据，输入1可以得到1，输入2可以得到2，因此答案为2\n## 思路\n显而易见，题意为在 `L~R` 中找一个数 `x`，使得 `x%p` 最大，那么判断一下 `L/p` 是否等于 `R/p`，若等于则肯定是 `R%p`，否则，肯定已经余过一轮了，最大余数就是 `p-1`。\n## 代码\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\nconst int maxn = 70005;\nint T;\nint L[maxn], R[maxn], P[maxn];\nvector<int> ans;\nint main() {\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    cin >> T;\n    for(int i = 0; i < T; ++i) \n        cin >> L[i];\n    for(int i = 0; i < T; ++i) \n        cin >> R[i];\n    for(int i = 0; i < T; ++i) \n        cin >> P[i];\n    for(int i = 0; i < T; ++i) {\n        int l = L[i], r = R[i], p = P[i];\n        if(l/p == r/p) ans.push_back(r%p);\n        else ans.push_back(p-1);\n        \n    }\n    for(int i = 0; i < T; ++i) {\n        if(i == 0) cout << ans[i];\n        else cout << ' ' << ans[i];\n    }\n    cout << endl;\n    return 0;\n}\n```\n\n# 编程题-2 分鸡蛋（AC 73%）\n说人话就是：\n初始x \n每次可以有以下两种操作：\n- ++x\n- if(x%3 == 0) x /= 3\n使x变为y最少需要多少步？\n这里给几个自己造的测试样例\n样例1\n```\n3\n102 1\n312 12\n23 10\n```\n```\n10\n5\n4\n```\n\n样例2\n```\n4\n210 4\n121 3\n312 102\n281 200\n```\n\n```\n8\n10\n70\n108\n```\n样例3\n```\n4\n299 298\n31 100\n8 1\n900100000000000000 20000200000100000\n```\n```\n200\n69\n3\n8887854321087664\n```\n好，开始分析\n## 思路\n每次尽可能让其x/=3，若x/3会小于y的话，则将其加至目标数\n若x/=3后无法被3整除且大于y，则加1~3使其变为可以被3整除再往下除。\n最后不是TLE了而是WA，我也没找出来可能哪里还有边界问题，过了73%\n## 代码\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\nconst int maxn = 70005;\ntypedef long long ll;\nint T;\nll x, y;\nint main() {\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    cin >> T;\n    while(T--) {\n        cin >> x >> y;\n        ll cnt = 0;\n        while(x != y) { \n            while (x != y && x % 3 == 0 && x/3 >= y) {\n                x /= 3;\n                ++cnt;\n            }\n            if(x == y) break;\n\n            if(x % 3 == 0) x /= 3,++cnt;\n            if(x < y) { // 加到目标数\n                cnt += y-x;\n                break;\n            } else {\n                while(x != y && x % 3 != 0) {   // 最多加三次\n                    ++x, ++cnt;\n                }\n            }\n        }\n        cout << cnt << endl;\n    }\n    return 0;\n}\n```\n","sources":["xlog"],"attributes":[{"value":"2022-chun-jing-dong-qian-duan-bi-shi-ti-mu-fu-pan-md","trait_type":"xlog_slug"}],"external_urls":["https://cosine.xlog.app/2022-chun-jing-dong-qian-duan-bi-shi-ti-mu-fu-pan-md"],"date_published":"2022-03-19T23:00:56.000Z"}}}