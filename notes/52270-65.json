{"characterId":52270,"noteId":65,"linkItemType":null,"linkKey":"0x0000000000000000000000000000000000000000000000000000000000000000","deleted":false,"locked":false,"contractAddress":"0x0000000000000000000000000000000000000000","uri":"ipfs://bafkreieuxpb7x276iv533vd7g2pgjiyibpipyr3l75flm4t4jwtecog6pe","operator":"0x679658be03475d0a5393c70ea0e9a1158dfae1ff","owner":"0x679658be03475d0a5393c70ea0e9a1158dfae1ff","createdAt":"2023-04-05T06:39:52.000Z","updatedAt":"2023-04-05T06:39:52.000Z","deletedAt":null,"publishedAt":"2021-11-27T20:12:48.000Z","transactionHash":"0x16c8bbbc59b889d2e6569492006a2c6cfbcfe39cb15611ff19baebf93088d12d","blockNumber":30317697,"logIndex":12,"updatedTransactionHash":"0x16c8bbbc59b889d2e6569492006a2c6cfbcfe39cb15611ff19baebf93088d12d","updatedBlockNumber":30317697,"updatedLogIndex":12,"metadata":{"uri":"ipfs://bafkreieuxpb7x276iv533vd7g2pgjiyibpipyr3l75flm4t4jwtecog6pe","type":"NOTE","content":{"tags":["post","软件工程"],"type":"note","title":"软件工程期末小测","content":"---\ntitle: 软件工程期末小测\nlink: 软件工程期末小测\ncatalog: true\nlang: cn\ndate: 2021-11-27 20:12:48\nsubtitle: 加粗的为答案（大概，仅供参考）如有错误麻烦评论一下（毕竟老师没给正确答案)后续复习会写解析（自己做一遍orz）\ntags:\n- 软件工程\ncategories:\n- [笔记, CS基础]\n---\n\n- 后记，我算是知道为啥不给正确答案了……期末考试出的原题- -\n- 勘误：51题需求工程的七个步骤应是起始、获取、细化、协商、规格说明、确认、管理（变更管理），在书上p74页（中文版）\n<hr style=\" border:solid; width:100px; height:1px;\" color=#000000 size=1\">\n加粗的为答案（仅供参考），如有错误麻烦评论一下，毕竟老师没给正确答案。\n解析也写了，不过都是个人的看法0.0\n\n# 一、单选题\n## 1、Software deteriorates rather than wears out because（）？\n> 软件会退化而不是磨损，其原因在于？\n\nA Software suffers from exposure to hostile environments(恶略的环境)\nB Defects are more likely to arise after software has been used often\n**C Multiple change requests introduce errors in component interactions**\n\n**正确答案：不断的需求变更会使组件接口之间引起错误**\n\nD Software spare parts become harder to order\n\n## 2.Which of these are the 5 generic software engineering framework activities?\n\n> 通用的软件工程过程框架活动有哪5个？\n\n**A communication, planning, modeling, construction, deployment**\n\n**正确答案：沟通-策划-建模-构建-部署**\n\n- **沟通：目的是理解利益相关者的项目目标，并收集需求以定义软件的特性和功能。**\n- **策划：定义和描述了软件工程工作，包括需要执行的技术任务、可能的风险、资源需求、工作产品和工作进度计划。**\n- **建模：利用模型更好的理解软件需求，并完成符合这些需求的软件设计。**\n- **构建：包括编码和测试一发现编码中的错误。**\n- **部署：软件（全部或者部分增量）交付到用户，用户对其进行评测并给出反馈意见。**\n\nB communication, risk management, measurement, production, reviewing\n\nC analysis, designing, programming, debugging, maintenance\n\nD analysis, planning, designing, programming, testing\n\n## 3.Which of the items listed below is not one of the software engineering layers?\n\n> 以下哪项不是软件工程层之一？\n\n软件工程是一种层次化的技术，包括过程层（process）, 方法层（methods）、工具层（tool）。\n\nA Process\n\n**B Manufacturing 不包括制造**\n\nC Methods\n\nD Tools\n\n## 4.Process models are described as agile because they\n\n> 过程模型被描述为敏捷模型，是因为它们？\n\nA eliminate the need for cumbersome(繁琐的) documentation\n\n**B emphasize maneuverability and adaptability 强调机动性和适应性**\n\nC do not waste development time on planning activities\n\nD make extensive use of prototype creation\n\n## 5.Evolutionary software process models\n\n> 演化软件过程模型\n\n本质上是迭代，可以轻松地适应产品需求的变化，一般不生产一次性系统\n\n> **演化模型（Evolutionary Model）包括两种常用的：****快速原型（Rapid Prototype）开发和螺旋模型**\n>\n> - 快速原型开发开始于沟通，软件开发人员与其他利益相关者进行沟通，定义软件的整体目标，明确已知需求并大致勾画出以后再进一步定义的东西，然后迅速策划一个原型开发迭代并进行建模（快速设计），快速设计主要集中在那些最终用户能够看到的方面，产生一个原型，对原型进行部署后由利益相关者进行评估，根据利益相关者的反馈信息，进一步精炼软件的需求。\n> - 螺旋模型是快速原型模型以进化的开发方式为中心，在每个项目阶段使用瀑布模型法。该模型的每一个周期都包括需求定义、风险分析、工程实现和评审4个阶段，由这4个阶段进行迭代。软件开发过程每迭代一次，软件开发又前进一个层次。螺旋模型强调风险分析，使得开发人员和用户对每个演化层出现的风险有所了解，继而做出应有的反应，因此适用于庞大、复杂并具有高风险的系统。\n\n## 6.The linear sequential model of software development is\n\n> 软件开发的线性顺序模型是\n\n就是瀑布模型啦，在明确定义需求时用瀑布模型开发最佳。\n\n**A A reasonable approach when requirements are well defined 在明确定义需求时的合理方法**\n\nB A good approach when a working program is required quickly.\n\nC The best approach to use for projects with large development teams.\n\nD An old fashioned model that cannot be used in a modern context.\n\n## 7.The incremental model of software development is\n\n> 软件开发的增量模型是\n\n增量模型把瀑布模型的顺序特征与快速原型法的迭代特征相结合，将软件看作一系列相互联系的增量，在开发过程的各次迭代中，每次完成其中的一个增量能在较短的时间内向用户提交可完成部分工作的产品\n\nA A reasonable approach whenrequirements are well defined\n\n**B A good approach when a working coreproduct is required quickly 当需要快速的协同产品时，是一个好的方法**\n\nC The best approach to use for projectswith large development teams\n\nD A revolutionary model that is not used for commercial products\n\n## 8.The prototyping model of software development is\n\n> 软件开发的原型模型是\n\n如上，原型开发在明确初步需求后迅速策划一个原型开发迭代并进行建模（快速设计），后面再慢慢补充需求不断迭代，适用于需求不明确的客户\n\nA A reasonable approach when requirements are well defined\n\n**B A useful approach when a customer cannot define requirements clearly 当客户不能明确定义需求时，这是一种有用的方法**\n\nC The best approach to use for projects with large development teams\n\nD A risky model that rarely produces a meaningful product\n\n## 9.Which of the following traits(特征)need to exist among the members of an agile software team?\n\n> 以下哪些特征需要存在于哪些敏捷软件团队成员之间？\n\nA Competence(能力)\n\nB Decision-making ability(决策能力)\n\nC Mutual trust and respect 相互信任和尊重\n\n**D All of the above 以上都是**\n\n## 10.What are the four framework activities found in the Extreme Programming (XP) process model?\n\n> 在极端编程(XP)过程模型中发现的四个框架活动是什么？\n\n极限编程(XP)是敏捷模型中最重要的软件开发框架之一。它包含了策划、设计、编码和测试4个框架活动的规则和实践。\n\n- 策划：即需求分析，但是不仅仅是用户需求，应该是开发中遇到的所有的需求。\n- 设计：编码前，肯定有个计划告诉你要做什么，结构是怎样等等。. 你一定要按照这个来做，否则可能会一团糟。\n- 编码：建议在开始编码之前为每一个故事开发一系列单元测试，基于这些单元测试在进行编程。与此同时鼓励结对编程以提高效率。\n- 测试：每天都要执行单元测试，以便提前发现问题。\n\nA analysis, design, coding, testing\n\nB planning, analysis, design, coding\n\nC planning, analysis, coding, testing\n\n**D planning, design, coding, testing 策划、设计、编码、测试**\n\n## 11.Which is not one of the key questions that is answered by each team member at each daily Scrum meeting?\n\n> 下列哪项不是每个团队成员在每日站会（Daily Scrum）上回答的关键问题之一？\n\n敏捷开发流程之Scrum\n\n开发团队是自组织的，通过每日站会来确认他们仍然可以实现Sprint的目标。\n每一个开发团队成员需要提供以下三点信息：\n\n- 昨天我完成了什么；\n- 今天我计划完成什么；\n- 有什么阻碍了我的进展。\n\n每日Scrum通常不超过15分钟。\n每日Scrum中可能有简要的问题澄清和回答，但是不应该有任何话题的讨论。\n每日Scrum既不是向管理层汇报，也不是向产品负责人或者ScrumMaster汇报。它是一个开发团队内部的沟通会议，来保证他们对现状有一致的了解。\n\nA What did you do since the last meeting? 从上次会议到现在你完成了什么\n\nB What obstacles are you encountering? 你遇到了什么障碍\n\n**C What is the cause of the problems you are encountering? 你遇到这些问题的原因是什么？（×，不属于每日站会的问题）**\n\nD What do you plan to accomplish at the next team meeting? 到下次会议你打算完成什么（即 今天你想完成什么）\n\n## 12.Which of the following is not necessary to apply agility to a software process?\n\n> 以下哪一项将敏捷性应用于软件流程是不必要的？\n\n**A Eliminate(消除) the use of project planning and testing 消除项目规划和测试的使用（Duck不必）**\n\nB Only essential work products are produced 只生产基本的工作产品\n\nC Process allows team to streamline tasks 流程允许团队简化任务\n\nD Uses incremental product delivery strategy 使用增量式产品交付策略\n\n## 13.How do you create agile processes to manage unpredictability?\n\n> 如何创建敏捷流程来管理不可预测性？\n\nA Risk analysis must be conducted before planning takes place 在计划进行前，必须进行风险分析\n\nB Software increments must be delivered in short time periods **软件增量必须在短时间内交付**\n\nC Software processes must adapt to changes incrementally **软件流程必须逐步适应变化**\n\n**D both B and C** \n\n## 14.Which of the following is not one of the principles of good coding?\n\n> 以下哪一个不是良好编码的原则之一？\n\nA Create unit tests before you begin coding 在开始编码前，请先创建单元测试\n\nB Create a visual layout that aids understanding  创建一个有助于理解的视觉布局\n\n**C Keep variable names short so that code is compact 保持变量名较短，以便使代码紧凑（是不对的！变量名应见名知义）**\n\nD Write self-documenting code, not program documentation 编写自文档化代码，而不是程序文件（就是说，可读性很强的代码本身就易于理解，而不需要依赖外部文档）\n\n## 15.Which of the following is not one of Hooker’s core principles of software engineering practice?\n\n> 以下哪一项不是胡克的软件工程实践的核心原则之一？\n\nA All design should be as simple as possible, but no simpler 所有的设计都应该尽可能简单，但不是更简单\n\nB A software system exists only to provide value to its users 软件系统的存在只是为了为用户提供价值\n\n**C Pareto principle (20% of any product requires 80% of the effort) 帕累托法则（任何产品的20%都需要80%的努力）**\n\nD Remember that you produce others will consume 记住，你生产别人会消费\n\n## 16.Software engineers collaborate with customers to define which of the following?\n\n> 软件工程师与客户合作，以定义以下哪一项？\n\nA customer visible usage scenarios **客户可见的使用场景**\n\nB Important software features **重要的软件特性**\n\nC System inputs and outputs **系统的输入和输出**\n\n**D All of the above 以上都是**\n\n## 17.What role(s)  do user stories play in agile planning?\n\n> 用户故事在敏捷规划中扮演着什么角色？\n\n用户故事是旨在帮助业务人员和技术人员双方都能理解需求，敏捷开发中用户故事的细化为开发提供了可执行标准。\n\nA Define useful software features and functions delivered to end-users **定义提供给最终用户的有用的软件特性和功能**\n\nB Provide a substitute to performing detailed scheduling of activities 提供执行详细活动安排的替代品\n\nC Used to estimate the effort required build the current increment **用于估计构建当前增量所需的工作量**\n\n**D both A and c**\n\n## 18.The system requirement specification describes the\n\n> 系统需求规约描述了\n\n**A Function, performance and constraints of a computer-based system 一个基于计算机的系统的功能、性能和约束条件**\n\nB implementation of each allocated system\n\nC element software architecture\n\nD time required for system simulation\n\n## 19.During project inception the intent of the of the tasks are to determine\n\n> 在项目开始期间，这些任务的目的是要确定的\n\nA basic problem understanding **基本问题理解**\n\nB nature of the solution needed **所需的解决方案的性质**\n\nC people who want a solution **那些想要一个解决方案的人**\n\n**D All of the above 以上都是**\n\n## 20.Which of the following is not one of the requirement classifications used in Quality Function Deployment(QFD)?\n\n> 以下哪一种不是质量功能部署(QFD)中使用的需求分类之一？、\n\n质量功能部署(QFD)是一种将客户要求转换成软件技术需求的技术，它确认了三类需求，以最大限度让客户从软件工程中感到满意：正常需求、期望需求、意外需求\n\nA exciting 意外需求\n\nB expected 期望需求\n\n**C mandatory 强制？命令？反正不是**\n\nD normal 正常需求\n\n## 21.Which of the following is not one of the context-free questions that would be used during project inception?\n\n> 以下哪一个问题不是项目开始时使用的上下文无关（context-free）问题？\n\nA What will be the economic benefit from a good solution? 一个好的解决方案会给你带来什么经济效益呢？\n\n**B Who is against this project?** **谁反对这个项目？**\n\nC Who will pay for the work? 谁将为这项工作买单？\n\nD Who will use the solution? 谁将使用这个解决方案？\n\n## 22.In collaborative requirements gathering, the facilitator\n\n> 在协作需求收集中，服务商\n\nA cannot be a member of the software team 不能成为该软件团队的成员\n\nB cannot be a customer 不能成为客户\n\n**C controls and facilitates the process 控制和促进这个过程**\n\nD must be an outsider 必须是局外人\n\n## 23.Which of following is not a UML diagram used creating a system analysis model?\n\n> 以下哪一个不是用来创建系统分析模型的UML图？\n\nA activity diagram 活动图\n\nB class diagram 类图\n\n**C dataflow diagram 数据流图**\n\nD state diagram 状态图\n\n## 24.UML activity diagrams are useful in representing which analysis model elements?\n\n> UML活动图在表示哪些分析模型元素时很有用？\n\nA Behavioral elements 行为元素\n\nB Class-based elements 基于类的元素\n\nC Flow-based elements 基于流的元素\n\n**D Scenario-based elements 基于场景的元素**\n\n## 25.Which of the following is not an objective for building an analysis model?\n\n> 以下哪一个不是建立分析模型的目标？\n\n分析模型必须实现的三个主要目标：描述客户需要什么；为软件设计奠定基础；定义在软件完成后可以被确认的一组需求。\n\nA define set of software requirements that can be validated 定义在软件完成后可以被确认的一组需求。\n\nB describe customer requirements 描述客户需求\n\n**C develop an abbreviated solution for the problem 为这个问题开发一个简短的解决方案**\n\nD establish basis for software design 为软件设计奠定基础\n\n## 26.Which of the following items does not appear on a CRC card?\n\n> 以下哪些物品没有出现在CRC卡上？\n\nCRC卡是一个标准索引卡集合，每一张卡片表示一个类。类名在最上方，类的职责在左侧，类的协作关系放在右侧。\n\nA class collaborators 类的协作关系\n\nB class name 类名\n\n**C class reliability 类的可靠性？？反正不在卡上**\n\nD class responsibilities 类的职责\n\n# 二、判断题\n\n## 27.Most software development projects are initiated to try to meet some business need.\n\n> 大多数软件开发项目都是为了满足一些业务需求。\n\n对\n\n## 28.Change cannot be easily accommodated in most software systems, unless the system was designed with change in mind.\n\n> 在大多数软件系统中，变化无法轻易地得到适应，除非系统在设计中就考虑到更改。\n\n对\n\n29与28相同\n\n## 30.Software is a product and can be manufactured using the same technologies used for other engineering artifacts(工程工件) .\n\n> 软件是一种产品，可以使用与其他工程工件所使用的相同技术来制造。\n\n对\n\n## 31.Software processes can be constructed out of pre-existing software patterns to best meet the needs of a software project.\n\n> 软件流程可以由已有的软件模式构建，以最好地满足软件项目的需求。\n\n对（站在前人的肩膀上嘛）\n\n## 32.lt is generally accepted that one cannot have weak software processes and create high quality end products.\n\n> 人们普遍认为，一个较弱的软件流程无法创造出高质量的终端产品。\n\n对\n\n## 33.Software engineering umbrella activities(普适活动) are only applied during the initial phases of software development projects.\n\n> 软件工程普适活动仅适用于软件开发项目的初始阶段。\n\n错，普适性活动适用于整个软件过程。\n\n## 34.Process technology tools allow software organizations to compress schedules by skipping unimportant activities.\n\n> 流程技术工具允许软件组织通过跳过不重要的活动来压缩计划时间表。\n\n对\n\n## 35.lt is not possible to build software that meets the customers’ needs today and exhibits the quality characteristics that will enable it to be extended tomorrow.\n\n> 不可能构建出既能满足今天客户需求又能展示了将使其能够在明天得到扩展的质量特性。\n\n对\n\n## 36.In agile software processes the highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n\n> 在敏捷软件流程中，最优先的是通过早期和持续交付有价值的软件来满足客户。\n\n对\n\n## 37.Agility is nothing more than the ability of a project team to respond rapidly to change.\n\n> 敏捷性只不过是一个项目团队对变化做出快速反应的能力。\n\n错 不止\n\n38?\n\n## 39.Teams using agile software practices never create models.\n\n> 使用敏捷软件实践的团队从不创建模型。\n\n错，敏捷开发不意味着就不设计原型了\n\n## 40.Analysis patterns facilitate(有助于) the transformation of the analysis model into a design model by suggesting reliable solutions to common problems.\n\n> 分析模式通过为常见问题提供可靠的解决方案，有助于将分析模型转换为设计模型。\n\n对\n\n## 41.Developers and customers create use-cases to help the software team understand how different classes of end-users will use functions.\n\n> 开发人员和客户创建用例，以帮助软件团队了解不同类别的最终用户将如何使用功能。\n\n对\n\n## 42.A stakeholder is anyone who will purchase the completed software system under development\n\n> 利益相关者是指将购买正在开发的完整软件系统的任何人\n\n错，利益相关者是在软件项目中存在利害关系的人，是受到系统影响或对系统开发产生影响的人\n\n## 43.Use-case actors are always people, never system devices.\n\n> 用例参与者总是人，而不是系统设备。\n\n错，也可以是系统、时间等\n\n## 44.In many cases there is no need to create a graphical representation of a usage scenario.\n\n> 在许多情况下，不需要创建使用场景的图形表示。\n\n对\n\n## 45.lt is relatively common for different customers to propose conflicting requirements, each arguing that his or her version is the right one.\n\n> 对于不同的客户来说，它提出相互冲突的要求是相对常见的，每个人都认为他或她的版本是正确的。\n\n对\n\n## 46.Information hiding makes program maintenance easier by hiding data and procedure from unaffected parts of the program.\n\n> 信息隐藏通过向程序中未受影响的部分隐藏数据和过程，使程序维护更容易。\n\n对\n\n# 三、简答题\n\n## 47.Explain what is wrong with the notion that computer software does not need to evolve (发展) over time.\n\n> 解释“计算机软件不需要随时间发展”的观念有什么错误。\n\n随着时间推移，在发现和纠正新的错误时，必须更新软件，以适应计算环境中的变化。还能多时候，客户会请求向现有产品添加新功能或适应业务环境中的更改。有时，一个较旧的系统将需要重新设计，以便在现代环境中为用户提供好处。不发展的软件最终将无法使用。\n\n\n## 48.Why are incremental process models considered by many to be the best approach to software development in a modern context?\n\n> 为什么许多人认为增量模型是现代环境下软件开发的最佳方法？\n\n增量模型是指在软件开发过程中，先开发主要功能模块，再开发次要功能模块，逐步完善，最终开发出符合需求的软件产品。现代软件变得小而全，在开发过程中用户需求更为复杂，需要一种方式提供增量进化，这个过程容纳更多的不确定性。\n\n## 49.Describe the phases of the prototyping model for software development?\n\n> 描述软件开发的原型模型的各个阶段？如图\n\n![请添加图片描述](https://img-blog.csdnimg.cn/7e052e8bf60148ba9b7a0a622740df56.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5L2ZY29z,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n首先需要交流，从客户与开发者会议中识别出他们的需求和目标，其次是快速设计阶段，聚焦在更具有代表性的功能，将有形的设计原型给客户。一个原型出现后，再由客户与开发者反复改进，直至建立完整的新系统。\n\n## 50.Describe the role of risk analysis in evolutionary process models like the spiral model.\n\n> 描述风险分析在螺旋模型等进化过程模型中的作用。\n\n螺旋模型强调风险分析，由于存在许多不确定因素，软件开发失败的风险是客观存在的，在每次迭代时，都需要执行风险分析，在技术及管理上进行评估，看其所需的功能与时间、成本是否可以接受\n\n## 51.what are the seven steps for requirements engineering?\n\n> 需求工程的七个步骤是？\n\n勘误：需求工程的七个步骤应该是\n\n①起始：定义将要解决的问题的范围和性质\n\n②获取：帮助利益相关者定义他们需要什么\n\n③细化：精确定义和修改基本需求\n\n④协商：调解冲突，协商如何定义优先次序？什么是必需的？什么时候需要？\n\n⑤规格说明：可以是一份写好的文档/一套图形化的模型/一个形式化的数学模型等等\n\n⑥确认：对需求工程的工作产品进行质量评估，确保其完整无歧义的说明了所有的系统。\n\n⑦管理：对于需求变更的管理，评估每个建议的变更\n## 52.Describe the weaknesses of use-cases as part of the requirements engineering process.\n\n> 需求工程过程中用例的缺点是？\n\n①不是面向对象的，没有主动应用的作用\n\n②两个用例间的关系没有严格定义\n\n③不显示系统中任何流或者依赖关系，没有表示操作顺序\n\n## 53.Describe white box testing and black box testing techniques.\n\n> 描述白盒测试和黑盒测试技术。\n\n白盒测试是知道产品内部工作过程的测试，它检测系统内部流程和逻辑结构是否正常执行，确定程序的实际运行状态与预期状态是否一致。\n\n黑盒测试是不知道产品内部工作过程的，它检测程序的功能是否符合它的功能说明。","sources":["xlog"],"attributes":[{"value":"ruan-jian-gong-cheng-qi-mo-xiao-ce-md","trait_type":"xlog_slug"}],"external_urls":["https://cosine.xlog.app/ruan-jian-gong-cheng-qi-mo-xiao-ce-md"],"date_published":"2021-11-27T20:12:48.000Z"}}}