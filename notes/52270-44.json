{"characterId":52270,"noteId":44,"linkItemType":null,"linkKey":"0x0000000000000000000000000000000000000000000000000000000000000000","deleted":false,"locked":false,"contractAddress":"0x0000000000000000000000000000000000000000","uri":"ipfs://bafkreie7fxisduayifmilnx2vx7idscwrgauencvwcttumlrnlhgztqqbu","operator":"0x679658be03475d0a5393c70ea0e9a1158dfae1ff","owner":"0x679658be03475d0a5393c70ea0e9a1158dfae1ff","createdAt":"2023-04-05T06:39:04.000Z","updatedAt":"2023-04-05T11:27:12.000Z","deletedAt":null,"publishedAt":"2022-01-30T14:30:17.000Z","transactionHash":"0xdc576b85b753d220cd2851aa2bc5e951b6f739ada0a82dfd613ec82afbd0296e","blockNumber":30317649,"logIndex":10,"updatedTransactionHash":"0x2117851f3accf1592f32aeba2a2e973f2d59db9279f738b071914636466cbf2c","updatedBlockNumber":30334937,"updatedLogIndex":0,"metadata":{"uri":"ipfs://bafkreie7fxisduayifmilnx2vx7idscwrgauencvwcttumlrnlhgztqqbu","type":"NOTE","content":{"tags":["post","前端","小程序","JavaScript","青训营"],"type":"note","title":"青训营 |「小程序技术全解」笔记","content":"---\ntitle: 青训营 |「小程序技术全解」笔记\nlink: note/front-end/bytedance-note/mini-program-develop\ncatalog: true\ndate: 2022-01-30 14:30:17\nsubtitle: 讲解了小程序的发展历程和技术解析，并实现了一个简易的番茄钟小程序~\nlang: cn\ntags:\n- 前端\n- 小程序\n- JavaScript\ncategories:\n- [笔记, 青训营笔记]\n---\n终于到了我超期待的一门课~~\n\n课程目标：\n\n- 认识和了解小程序的业务产品价值\n- 学习和掌握小程序相关技术原理\n\n# 小程序的发展历程\n\n## 发展历程\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8351c2bbcb5447849468f92d38fdf8e2~tplv-k3u1fbpfcp-watermark.image?)\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b1cc1fef439a46f2b9896883a2f390f6~tplv-k3u1fbpfcp-watermark.image?)\n\n## 核心数据\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8a26b7b0fee4ea7b6284b5e65f51541~tplv-k3u1fbpfcp-watermark.image?)\n\n## 小程序生态\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/69d41db65da44e10ba461a8dfb994d9c~tplv-k3u1fbpfcp-watermark.image?)\n\n# 业务价值\n\n## 与WEB的区别\n\n- 有着固定的语法以及统一的版本管理， 平台可以更**方便的进行审核**\n- **平台能够控制各个入口**，如二维码，文章内嵌，端内分享。入口上也能带来更好的用户体验\n- 小程序基于特殊的架构，在流畅度上比WEB更好，有**更优秀的跳转体验**\n\n## 三大价值\n\n### 渠道价值\n\n- 便捷导流\n\n由于小程序的便捷性，依托于超级平台，小程序能够充分为很多场景导流，如美团和美团优选微信小程序带来的流量占比分别是40%和80%\n\n### 业务探索价值\n\n- 快速试错\n\n相比原生APP来说，小程序的开发难度和成本都降低的很多，这就创造了很多场景开发者能够用小程序来**快速试错**，不断探索新的业务价值\n\n### 数字升级价值\n\n- 容错空间大，覆盖范围广\n\n线下到线上如何做？从轻消费类的快餐、茶饮到地产汽车等大宗消费，小程序都展示了良好的容错空间。线下场景的小程序覆盖范围很广。\n\n# 小程序技术解析\n\n## 小程序原理\n\n第三方开发应用最简单最方便的方式？\n\n- WebView + JSBridge\n  - WebView：移动端提供的运行JavaScript的环境，相当于App内的浏览器页面\n  - JSBridge：顾名思义，作为桥梁开发者可以调用App本身的一些api\n\n几个问题：\n\n- 无网络的情况体验不佳\n- 网页切换体验不佳\n- **如何管控保证安全**\n\n而小程序通过以下方式，解决了这些问题：\n\n- 开发门槛低——HTML+JS+CSS\n- 接近原生的使用体验——资源加载 + 渲染 + 页面切换\n- 安全管控——独立JS沙箱：隔绝操作dom的方式\n  - 不操作DOM如何控制页面渲染？\n  - Data -> 根据数据处理DOM -> 页面\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9395e25b321e44b1b78c0f9735d9a07d~tplv-k3u1fbpfcp-watermark.image?)\n\n## 小程序语法\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca88825a4bdf46fbbe95df9a0b1f77cf~tplv-k3u1fbpfcp-watermark.image?)\n\n如图：比如字节小程序是TTML/JS/TTSS，而微信小程序则是WXML/JS/WXSS，对应HTML/JS/CSS\n\n\n\n## 实现简易番茄时钟\n\n下面试一试在微信小程序上实现如图一个番茄钟~（不同的小程序语法上大同小异）\n\n[代码片段](https://developers.weixin.qq.com/s/XpqAlHm87owi)\n\n![番茄钟.gif](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b8ada35bb88143319ce17603de92c141~tplv-k3u1fbpfcp-watermark.image?)\n\n### 编写tomatoClock.wxml（html）\n\n简单的用html写个界面先~\n\n```html\n<view class=\"container\">\n  <view class=\"clock\">{{timeText}}</view>\n  <button wx:if=\"{{running}}\" class=\"button\" bindtap=\"onReset\">重置</button>\n  <button wx:else class=\"button\" bindtap=\"onStart\">开始</button>\n</view>\n```\n\n{{timeText}} 实现页面与js中数据的**双向绑定**（该数据更新时页面也会进行渲染~）\n\n### 编写tomatoClock.js\n\n编写js进行事件函数、该页面数据的绑定\n\n```js\n// pages/apply/tomatoClock/tomatoClock.js\nconst DEFAULT_TIME = 25*60;\t// 25分钟\nfunction formatTime(time) {\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const mText = `0${minutes}`.slice(-2);\n  const sText = `0${seconds}`.slice(-2);\n  return `${mText} : ${sText}`;\n}\n```\n\n从后往前截断实现前导0补全，就可以展示两位数时间（学到了！）\n\n然后是事件的处理，setTimer函数设置一个间隔1s的定时器，设置初始time为默认时间，每隔1s使得当前time-1(同时页面也会刷新)，onStart事件在开始时设置定时器并置running为true，onReset事件在重置时时清除定时器，设置running为false并将timeText设置为默认时间\n\n```js\nPage({\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    timeText: formatTime(DEFAULT_TIME),\n    running: false\n  },\n  setTimer:function() {\n    this.timer = setInterval(() => {\n      this.time = this.time - 1;\n      if(this.time < 0) {\n        clearInterval(this.timer);\n        return;\n      }\n      this.setData({\n        timeText: formatTime(this.time)\n      })\n    }, 1000);\n  },\n  // 事件函数 开始时设置定时器并置running为true\n  onStart: function() {\n    if(!this.timer) {\n      this.time = DEFAULT_TIME;\n      this.setTimer();\n      this.setData({\n        running: true\n      })\n    }\n  },\n  // 事件函数 重置时清除定时器，设置running为false并将timeText设置为默认时间\n  onReset: function() {\n    clearInterval(this.timer);\n    this.timer = null;\n    this.time = DEFAULT_TIME;\n    this.setData({\n      timeText: formatTime(DEFAULT_TIME),\n      running: false\n    });\n  },\n  // else 生命周期函数（监听页面加载、渲染等）\n})\n```\n\n### 编写一点点wxss（css）\n\n可以在app.wxss中，实现全局通用的css如container等\n\n```css\n/**app.wxss**/\npage { background-color: #97ABFF; }\n.container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n  padding: 200rpx 0;\n  box-sizing: border-box;\n  background-color: #97ABFF;  \n} \n\n```\n\n在页面自己的css里(index.wxss)，写该页面所需的css~\n\n```css\n/**index.wxss**/\n.clock {\n  line-height: 400rpx;\n  width: 400rpx;\n  text-align: center;\n  border-radius: 50%;\n  border: 5px solid white;\n\n  color: white;\n  font-size: 50px;\n  font-weight: bold;\n}\n\n.button {\n  margin-top: 200rpx;\n  text-align: center;\n  border-radius: 10px;\n  border: 3px solid white; \n  background-color: transparent;\n\n  font-size: 25px;\n  color: white;\n  padding: 5px 10px;\n}\n```\n\n# 相关拓展\n\n什么是跨端框架？\n\n- 复杂应用构建\n- 一次开发可以跨多端（微信小程序、各系小程序等等）\n\n## 跨端框架介绍\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f1de2849950d40598918c9d0d4299aff~tplv-k3u1fbpfcp-watermark.image?)\n\n## 跨端框架原理\n\n### 编译时\n\n#### AST 语法树\n\n[抽象语法树 - 维基百科](https://zh.wikipedia.org/wiki/抽象語法樹)\n\n> 在[计算机科学](https://zh.wikipedia.org/wiki/计算机科学)中，**抽象语法树**（**A**bstract **S**yntax **T**ree，AST），或简称**语法树**（Syntax tree），是[源代码](https://zh.wikipedia.org/wiki/源代码)[语法](https://zh.wikipedia.org/wiki/语法学)结构的一种抽象表示。它以[树状](https://zh.wikipedia.org/wiki/树_(图论))的形式表现[编程语言](https://zh.wikipedia.org/wiki/编程语言)的语法结构，树上的每个节点都表示源代码中的一种结构。之所以说语法是“抽象”的，是因为这里的语法并不会表示出真实语法中出现的每个细节。比如，嵌套括号被隐含在树的结构中，并没有以节点的形式呈现；而类似于 `if-condition-then` 这样的条件跳转语句，可以使用带有三个分支的节点来表示。\n>\n> 和抽象语法树相对的是具体语法树（通常称作[分析树](https://zh.wikipedia.org/wiki/分析树)）。一般的，在源代码的翻译和[编译](https://zh.wikipedia.org/wiki/编译)过程中，[语法分析器](https://zh.wikipedia.org/wiki/語法分析器)创建出分析树，然后从分析树生成AST。一旦AST被创建出来，在后续的处理过程中，比如[语义分析](https://zh.wikipedia.org/wiki/语义分析)阶段，会添加一些信息。\n\n\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a563ebdd42444d7e9f722ae3e570e268~tplv-k3u1fbpfcp-watermark.image?)\n\n解析 -> 生成AST语法树 ->生成页面\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16a0e587d4f9463e8687ed7c3fddbd76~tplv-k3u1fbpfcp-watermark.image?)\n\n如：\n\n```html\n<View>{foo ? <View /> : <Text />}</View>\n```\n\n-> 转化为字节小程序的语法\n\n```html\n<view><block tt: if={foo}><view /></block><block tt:else><text /></block></view>\n```\n\n天然缺陷：无法**完全抹平差异**！\n\n- 小程序本身是有很多限制的\n- 所以大部分方案都是运行时方案\n\n### 运行时\n\n#### 虚拟DOM\n\n本质为js中的一个对象，有很多dom中的属性值标签等，通过这个对象可以生成我们的实际DOM\n\n#### Template组件\n\n小程序中提供的动态生成的模板。\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7eda62883404711b6b97dab0323c7ed~tplv-k3u1fbpfcp-watermark.image?)\n\n#### 运行时结构\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/001298b57b23466a94e02a31bfb1c1ba~tplv-k3u1fbpfcp-watermark.image?)\n\n\n- 运行时的方案也不是完美的\n- 在一些场景下相比原生小程序的语法性能会更差\n- 大部分场景下都可！\n\n# 总结感想\n\n这节课大致讲解了小程序的发展历程和技术解析，实现了一个简易的番茄钟小程序~\n\n> 本文引用的大部分内容来自张晓伟老师的课\n","sources":["xlog"],"summary":"终于到了我超期待的一门课~~ 课程目标：\n\n认识和了解小程序的业务产品价值 学习和掌握小程序相关技术原理\n发展历程\n\n核心数据\n\n小程序生态\n\n与WEB的区别\n有着固定的语法以及统一的版本管理， 平台可以更方便的进行审核 平台能够控制各个入口，如二维码，文章内嵌…","attributes":[{"value":"mini-program-developmd","trait_type":"xlog_slug"}],"external_urls":["https://cosine.xlog.app/mini-program-developmd"],"date_published":"2022-01-30T14:30:17.000Z"}}}